name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Test

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Go
      run: |
        - export CURRENT_BUILD_PATH=$(pwd)
        - echo $PATH
        - rm -rf $HOME/golang
        - rm -rf $HOME/gopath
        - mkdir -p $HOME/golang # for GOROOT (contains the Go binary & core packages)
        - mkdir -p $HOME/gopath # for GOPATH (contains code and external packages)
        - curl http://storage.googleapis.com/golang/go1.19.1.linux-amd64.tar.gz 2>/dev/null > go1.19.1.linux-amd64.tar.gz
        - tar -C $HOME/golang -xzf go1.19.1.linux-amd64.tar.gz
        - export GOROOT=$HOME/golang/go
        - export GOPATH=$HOME/gopath
        - export PATH=$PATH:$GOROOT/bin
        - export PATH=$PATH:$GOPATH/bin
        - go version
        - echo $PATH
        - go env
        - which go

    - name: Install fetchd
      run: |
        git clone https://github.com/fetchai/fetchd.git && cd fetchd
        make build
        make install

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests
      run: |
        poetry run pytest

    - name: Lints
      run: |
        poetry run pylint src/
